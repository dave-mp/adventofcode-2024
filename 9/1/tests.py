import unittest
from main import (
    translate_file_map,
    find_first_empty_fragment,
    find_last_file_fragment,
    defragment_file,
    calculate_checksum,
)


class TestDefragmentFile(unittest.TestCase):
    def test_translate_file_map(self):
        tfm = translate_file_map("2333133121414131402")
        print(tfm)
        assert tfm == [
            "0",
            "0",
            ".",
            ".",
            ".",
            "1",
            "1",
            "1",
            ".",
            ".",
            ".",
            "2",
            ".",
            ".",
            ".",
            "3",
            "3",
            "3",
            ".",
            "4",
            "4",
            ".",
            "5",
            "5",
            "5",
            "5",
            ".",
            "6",
            "6",
            "6",
            "6",
            ".",
            "7",
            "7",
            "7",
            ".",
            "8",
            "8",
            "8",
            "8",
            "9",
            "9",
        ]

    def test_find_first_empty_fragment(self):
        assert (
            find_first_empty_fragment(
                [
                    "0",
                    "0",
                    ".",
                    ".",
                    ".",
                    "1",
                    "1",
                    "1",
                    ".",
                    ".",
                    ".",
                    "2",
                    ".",
                    ".",
                    ".",
                    "3",
                    "3",
                    "3",
                    ".",
                    "4",
                    "4",
                    ".",
                    "5",
                    "5",
                    "5",
                    "5",
                    ".",
                    "6",
                    "6",
                    "6",
                    "6",
                    ".",
                    "7",
                    "7",
                    "7",
                    ".",
                    "8",
                    "8",
                    "8",
                    "8",
                    "9",
                    "9",
                ]
            )
            == 2
        )

    def test_find_last_file_fragment(self):
        assert (
            find_last_file_fragment(
                [
                    "0",
                    "0",
                    ".",
                    ".",
                    ".",
                    "1",
                    "1",
                    "1",
                    ".",
                    ".",
                    ".",
                    "2",
                    ".",
                    ".",
                    ".",
                    "3",
                    "3",
                    "3",
                    ".",
                    "4",
                    "4",
                    ".",
                    "5",
                    "5",
                    "5",
                    "5",
                    ".",
                    "6",
                    "6",
                    "6",
                    "6",
                    ".",
                    "7",
                    "7",
                    "7",
                    ".",
                    "8",
                    "8",
                    "8",
                    "8",
                    "9",
                    "9",
                ]
            )
            == 41
        )

    def test_defragment_file(self):
        assert defragment_file(
            [
                "0",
                "0",
                ".",
                ".",
                ".",
                "1",
                "1",
                "1",
                ".",
                ".",
                ".",
                "2",
                ".",
                ".",
                ".",
                "3",
                "3",
                "3",
                ".",
                "4",
                "4",
                ".",
                "5",
                "5",
                "5",
                "5",
                ".",
                "6",
                "6",
                "6",
                "6",
                ".",
                "7",
                "7",
                "7",
                ".",
                "8",
                "8",
                "8",
                "8",
                "9",
                "9",
            ]
        ) == list("0099811188827773336446555566..............")

    def test_calculate_checksum(self):
        assert calculate_checksum("0099811188827773336446555566..............") == 1928


if __name__ == "__main__":
    unittest.main()
